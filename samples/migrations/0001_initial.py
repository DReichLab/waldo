# Generated by Django 2.1.8 on 2019-11-13 20:11

import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Collaborator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('first_name', models.CharField(db_index=True, max_length=30)),
                ('last_name', models.CharField(db_index=True, max_length=30)),
                ('title', models.CharField(blank=True, help_text="Collaborator's professional title", max_length=65)),
                ('institution', models.CharField(db_index=True, help_text="Collaborator's associated institution or company", max_length=100)),
                ('department', models.CharField(blank=True, help_text="Collaborator's department or division", max_length=110)),
                ('address_1', models.CharField(max_length=70)),
                ('address_2', models.CharField(blank=True, max_length=50)),
                ('address_3', models.CharField(blank=True, max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('county_region', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('country', models.CharField(db_index=True, max_length=50)),
                ('postal_code', models.CharField(max_length=20)),
                ('phone_number_office', models.CharField(blank=True, max_length=30)),
                ('phone_number_mobile', models.CharField(blank=True, max_length=30)),
                ('email_1', models.CharField(max_length=50)),
                ('email_2', models.CharField(blank=True, max_length=50)),
                ('skype_user_name', models.CharField(blank=True, max_length=30)),
                ('facetime_user_name', models.CharField(blank=True, max_length=30)),
                ('whatsapp_user_name', models.CharField(blank=True, max_length=30)),
                ('twitter', models.CharField(blank=True, max_length=50)),
                ('facebook', models.CharField(blank=True, max_length=50)),
                ('website', models.CharField(blank=True, max_length=200)),
                ('research_gate_academia', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(help_text='Additional information about collaborator')),
                ('primary_collaborator', models.BooleanField(db_index=True, help_text='Is this person a Primary Collaborator? This field is used select collaborators for Harvard office of Academic Reasearch Integrity approval', null=True)),
                ('harvard_ari_approval', models.BooleanField(db_index=True, help_text='Has the Harvard office of Academic Research Integrity cleared this collaborator?')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ControlsExtract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('ec_count', models.PositiveSmallIntegerField()),
                ('ec_median', models.FloatField()),
                ('ec_max', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ControlsLibrary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('lc_count', models.PositiveSmallIntegerField()),
                ('lc_median', models.FloatField()),
                ('lc_max', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DistributionsExtract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('extract_sent_ul', models.FloatField(help_text='Total microliters of extract distributed')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DistributionsLysate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('lysate_sent_ul', models.FloatField(help_text='Total microliters of lysate distributed')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DistributionsPowder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('powder_sent_mg', models.FloatField(help_text='Total miligrams of bone powder distributed')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DistributionsShipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('date', models.DateField(help_text='Distribution shipment date')),
                ('shipment_method', models.CharField(help_text='Shipment method used to send samples: FedEx, USPS, hand carried', max_length=20)),
                ('shipment_tracking_number', models.CharField(help_text='Courier package tracking number', max_length=30)),
                ('shipment_notes', models.TextField(help_text='Any notes associated with the distribution shipment')),
                ('delivery_date', models.DateField(help_text='Date distribution shipment was delivered')),
                ('delivery_notes', models.TextField(help_text='Any notes assoicated with the distribution delivery: person confirming delivery, etc.')),
                ('collaborator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.Collaborator')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Extract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('lysis_volume_extracted', models.FloatField()),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExtractBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('batch_name', models.CharField(max_length=50)),
                ('technician', models.CharField(max_length=50)),
                ('date', models.DateField()),
                ('robot', models.CharField(max_length=20)),
                ('note', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExtractionProtocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('update_description', models.TextField()),
                ('manual_robotic', models.CharField(max_length=20)),
                ('total_lysis_volume', models.FloatField()),
                ('lysate_fraction_extracted', models.FloatField()),
                ('final_extract_volume_produced', models.FloatField()),
                ('binding_buffer', models.CharField(max_length=20)),
                ('publication_summary', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('udg_treatment', models.CharField(max_length=10)),
                ('ul_extract_used', models.FloatField()),
                ('alt_category', models.TextField()),
                ('notes', models.TextField()),
                ('find', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LibraryBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=50)),
                ('technician', models.CharField(max_length=50)),
                ('prep_date', models.DateField()),
                ('prep_note', models.TextField()),
                ('prep_robot', models.CharField(max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LibraryProtocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('update_description', models.TextField()),
                ('publication_summary', models.TextField()),
                ('manual_robotic', models.CharField(max_length=20)),
                ('volumne_extract_used_standard', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Lysate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('powder_used_mg', models.FloatField(help_text='milligrams of bone powder used in lysis')),
                ('total_volume_produced', models.FloatField(help_text='Total microliters of lysate produced')),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MTCapturePlate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=30)),
                ('technician', models.CharField(max_length=50)),
                ('date', models.DateField()),
                ('robot', models.CharField(max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MTCaptureProtocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('update_description', models.TextField()),
                ('publication_summary', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MTSequencingRun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=30)),
                ('technician', models.CharField(max_length=50)),
                ('date', models.DateField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NuclearCapturePlate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=50)),
                ('enrichment_type', models.CharField(max_length=50)),
                ('technician', models.CharField(max_length=50)),
                ('date', models.DateField()),
                ('robot', models.CharField(max_length=50)),
                ('hyb_wash_temps', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NuclearCaptureProtocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('update_description', models.TextField()),
                ('publication_summary', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NuclearSequencingRun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=50)),
                ('technician', models.CharField(max_length=50)),
                ('date', models.DateField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PowderBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=50)),
                ('date', models.DateField()),
                ('technician', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PowderSample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('sampling_tech', models.CharField(help_text='Technique used to produce the bone powder', max_length=15)),
                ('sampling_notes', models.TextField(blank=True, help_text='Notes from technician about sample quality, method used, mg of bone powder produced and storage location')),
                ('total_powder_produced_mg', models.FloatField(help_text='Total miligrams of bone powder produced from the sample')),
                ('storage_location', models.CharField(help_text='Storage location of remaining bone powder', max_length=50)),
                ('powder_batch', models.ForeignKey(help_text='powder belongs to this processing batch', on_delete=django.db.models.deletion.PROTECT, to='samples.PowderBatch')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('first_author', models.CharField(max_length=50)),
                ('year', models.PositiveSmallIntegerField()),
                ('journal', models.CharField(max_length=100)),
                ('pages', models.CharField(max_length=30)),
                ('author_list', models.TextField()),
                ('url', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RadiocarbonDatedSample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('notes', models.TextField()),
                ('material', models.CharField(max_length=50)),
                ('fraction_modern', models.FloatField()),
                ('fraction_modern_plus_minus', models.FloatField()),
                ('d14c_per_mille', models.FloatField()),
                ('d14c_per_mille_plus_minus', models.FloatField()),
                ('age_14c_bp', models.FloatField()),
                ('age_14c_bp_plus_minus', models.FloatField()),
                ('delta13c_per_mille', models.FloatField()),
                ('delta15n_per_mille', models.FloatField()),
                ('percent_carbon', models.FloatField()),
                ('percent_nitrogen', models.FloatField()),
                ('carbon_to_nitrogen_ratio', models.FloatField()),
                ('run_date', models.DateField()),
                ('lab_code', models.CharField(max_length=50)),
                ('payment_lab', models.CharField(max_length=50)),
                ('find', models.CharField(max_length=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RadiocarbonDatingInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('company_name', models.CharField(max_length=50)),
                ('billing_period', models.CharField(max_length=50)),
                ('billing_date', models.DateField()),
                ('item_description', models.TextField()),
                ('number_of_samples', models.PositiveSmallIntegerField()),
                ('total_charge', models.DecimalField(decimal_places=2, max_digits=9)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RadiocarbonShipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('ship_date', models.DateField()),
                ('analysis_lab', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Return',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('return_date', models.DateField(default=datetime.date.today)),
                ('return_method', models.CharField(max_length=50)),
                ('tracking_number', models.CharField(max_length=30)),
                ('courier_delivery_date', models.DateField(null=True)),
                ('recipient_delivery_confirmation', models.TextField()),
                ('return_notes', models.TextField()),
                ('collaborator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.Collaborator')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('reich_lab_id', models.PositiveIntegerField(db_index=True)),
                ('individual_id', models.CharField(max_length=15)),
                ('skeletal_element', models.CharField(help_text='Type of bone sample submitted for aDNA analysis', max_length=30)),
                ('skeletal_code', models.CharField(help_text='Sample identification code assigned by the collaborator', max_length=150)),
                ('sample_date', models.CharField(help_text='Age of sample; either a radiocarbon date or a date interval.', max_length=550)),
                ('average_bp_date', models.FloatField(help_text='Average Before Present date, calculated from average of calibrated date range after conversion to BP dates')),
                ('date_fix_flag', models.CharField(blank=True, help_text='Flag for any issues with the date information submitted by the collaborator', max_length=75)),
                ('population_label', models.CharField(help_text='Country_Culture_Period of Individual', max_length=100)),
                ('locality', models.CharField(help_text='Location where skeletal remains were found', max_length=150)),
                ('country', models.CharField(help_text='Country where skeletal remains were found', max_length=30)),
                ('latitude', models.CharField(help_text='Latitude where skeletal remains were found', max_length=20)),
                ('longitude', models.CharField(help_text='Longitude where skeletal remains were found', max_length=20)),
                ('notes', models.TextField(help_text='Any notes from the collaborator about the individual, sample, site, etc.')),
                ('notes_2', models.TextField(help_text='Any notes from the collaborator about the individual, sample, site, etc.')),
                ('collaborators', models.TextField(help_text='List of additional collaborators asociated with the sample or reference if sample has been published', max_length=300)),
                ('morphological_sex', models.CharField(help_text='Sex as determined by skeletal remains', max_length=20)),
                ('morphological_age', models.CharField(help_text='Age as determined by skeletal remains: adult, child, infant, etc.', max_length=25)),
                ('morphological_age_range', models.CharField(help_text='Age range in years as determined by skeletal remains', max_length=15)),
                ('loan_expiration_date', models.DateField(help_text='Date by which samples need to be returned to collaborator', null=True)),
                ('radiocarbon_dating_status', models.CharField(help_text="David Reich's radiocarbon dating status as noted in his anno file", max_length=120)),
                ('publication', models.CharField(help_text='Publication reference if sample has been published', max_length=100)),
                ('find', models.TextField(help_text='Utilitarian field used to "find" samples by adding data into this field via excel spreadsheet import to create a found set')),
                ('collaborator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.Collaborator')),
                ('return_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.Return')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Shipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('arrival_date', models.DateField()),
                ('number_of_samples_for_analysis', models.PositiveSmallIntegerField()),
                ('total_number_of_samples', models.PositiveSmallIntegerField()),
                ('arrival_method', models.CharField(max_length=255)),
                ('tracking_number', models.CharField(max_length=30)),
                ('arrival_notes', models.TextField()),
                ('shipment_notes', models.TextField()),
                ('storage_location_note', models.TextField()),
                ('special_packaging_location', models.TextField()),
                ('documents_in_package', models.TextField()),
                ('agreement_permits', models.TextField()),
                ('agreement_permit_location', models.TextField()),
                ('supplementary_information', models.TextField()),
                ('supplementary_information_location', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShotgunPool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=50)),
                ('technician', models.CharField(max_length=50)),
                ('date', models.DateField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShotgunSequencingRun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=50)),
                ('technician', models.CharField(max_length=50)),
                ('date', models.DateField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='sample',
            name='shipment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.Shipment'),
        ),
        migrations.AddField(
            model_name='radiocarbondatedsample',
            name='invoice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.RadiocarbonDatingInvoice'),
        ),
        migrations.AddField(
            model_name='radiocarbondatedsample',
            name='radiocarbon_shipment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.RadiocarbonShipment'),
        ),
        migrations.AddField(
            model_name='radiocarbondatedsample',
            name='sample',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.Sample'),
        ),
        migrations.AddField(
            model_name='powdersample',
            name='sample',
            field=models.ForeignKey(help_text='Powder was produced from this sample', on_delete=django.db.models.deletion.PROTECT, to='samples.Sample'),
        ),
        migrations.AddField(
            model_name='nuclearcaptureplate',
            name='protocol',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='samples.NuclearCaptureProtocol'),
        ),
        migrations.AddField(
            model_name='mtcaptureplate',
            name='protocol',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='samples.MTCaptureProtocol'),
        ),
        migrations.AddField(
            model_name='lysate',
            name='powder_sample',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.PowderSample'),
        ),
        migrations.AddField(
            model_name='librarybatch',
            name='protocol',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.LibraryProtocol'),
        ),
        migrations.AddField(
            model_name='extractbatch',
            name='protocol',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.ExtractionProtocol'),
        ),
        migrations.AddField(
            model_name='extract',
            name='extract_batch_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.ExtractBatch'),
        ),
        migrations.AddField(
            model_name='extract',
            name='lysate_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='samples.Lysate'),
        ),
        migrations.AddField(
            model_name='distributionspowder',
            name='distribution_shipment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.DistributionsShipment'),
        ),
        migrations.AddField(
            model_name='distributionspowder',
            name='powder_sample',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.PowderSample'),
        ),
        migrations.AddField(
            model_name='distributionslysate',
            name='distribution_shipment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.DistributionsShipment'),
        ),
        migrations.AddField(
            model_name='distributionslysate',
            name='lysate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.Lysate'),
        ),
        migrations.AddField(
            model_name='distributionsextract',
            name='distribution_shipment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.DistributionsShipment'),
        ),
        migrations.AddField(
            model_name='distributionsextract',
            name='extract',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.Extract'),
        ),
    ]
