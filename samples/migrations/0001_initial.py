# Generated by Django 3.0.4 on 2020-03-31 14:24

import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Collaborator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('first_name', models.CharField(db_index=True, max_length=30)),
                ('last_name', models.CharField(db_index=True, max_length=30)),
                ('title', models.CharField(blank=True, help_text="Collaborator's professional title", max_length=65)),
                ('institution', models.CharField(db_index=True, help_text="Collaborator's associated institution or company", max_length=100)),
                ('department', models.CharField(blank=True, help_text="Collaborator's department or division", max_length=110)),
                ('address_1', models.CharField(max_length=70)),
                ('address_2', models.CharField(blank=True, max_length=50)),
                ('address_3', models.CharField(blank=True, max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('county_region', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('country', models.CharField(db_index=True, max_length=50)),
                ('postal_code', models.CharField(max_length=20)),
                ('phone_number_office', models.CharField(blank=True, max_length=30)),
                ('phone_number_mobile', models.CharField(blank=True, max_length=30)),
                ('email_1', models.CharField(max_length=50)),
                ('email_2', models.CharField(blank=True, max_length=50)),
                ('skype_user_name', models.CharField(blank=True, max_length=30)),
                ('facetime_user_name', models.CharField(blank=True, max_length=30)),
                ('whatsapp_user_name', models.CharField(blank=True, max_length=30)),
                ('twitter', models.CharField(blank=True, max_length=50)),
                ('facebook', models.CharField(blank=True, max_length=50)),
                ('website', models.CharField(blank=True, max_length=200)),
                ('research_gate_academia', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(help_text='Additional information about collaborator')),
                ('primary_collaborator', models.BooleanField(db_index=True, help_text='Is this person a Primary Collaborator? This field is used select collaborators for Harvard office of Academic Reasearch Integrity approval', null=True)),
                ('ora_approval', models.BooleanField(db_index=True, help_text='Has the Harvard office of Academic Research Integrity cleared this collaborator?')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ControlsExtract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('ec_count', models.PositiveSmallIntegerField()),
                ('ec_median', models.FloatField()),
                ('ec_max', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ControlsLibrary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('lc_count', models.PositiveSmallIntegerField()),
                ('lc_median', models.FloatField()),
                ('lc_max', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExtractionProtocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=50)),
                ('start_date', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('update_description', models.TextField(blank=True)),
                ('manual_robotic', models.CharField(blank=True, max_length=20)),
                ('total_lysis_volume', models.FloatField(null=True)),
                ('lysate_fraction_extracted', models.FloatField(null=True)),
                ('final_extract_volume', models.FloatField(null=True)),
                ('binding_buffer', models.CharField(blank=True, max_length=20)),
                ('reference_abbreviation', models.CharField(blank=True, max_length=50)),
                ('publication_summary', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('reich_lab_library_id', models.CharField(db_index=True, max_length=20, unique=True)),
                ('udg_treatment', models.CharField(max_length=10)),
                ('ul_extract_used', models.FloatField(null=True)),
                ('alt_category', models.CharField(blank=True, max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('assessment', models.TextField(help_text='Xcontam listed if |Z|>2 standard errors from zero: 0.02-0.05="QUESTIONABLE", >0.05="QUESTIONABLE_CRITICAL" or "FAIL") (mtcontam 97.5th percentile estimates listed if coverage >2: <0.8 is "QUESTIONABLE_CRITICAL", 0.8-0.95 is "QUESTIONABLE", and 0.95-0.98 is recorded but "PASS", gets overriden by ANGSD')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LibraryProtocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('start_date', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('update_description', models.TextField(blank=True)),
                ('library_method_reference_abbreviation', models.CharField(blank=True, max_length=20)),
                ('publication_summary', models.TextField(blank=True)),
                ('manual_robotic', models.CharField(blank=True, max_length=20)),
                ('volume_extract_used_standard', models.FloatField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MTCapturePlate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=30)),
                ('technician', models.CharField(blank=True, max_length=10)),
                ('date', models.DateField(null=True)),
                ('robot', models.CharField(blank=True, max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MTCaptureProtocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('update_description', models.TextField()),
                ('publication_summary', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MTSequencingRun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=30)),
                ('technician', models.CharField(blank=True, max_length=10)),
                ('date', models.DateField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NuclearCapturePlate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=50)),
                ('enrichment_type', models.CharField(blank=True, max_length=20)),
                ('technician', models.CharField(blank=True, max_length=10)),
                ('date', models.DateField(null=True)),
                ('robot', models.CharField(max_length=50)),
                ('hyb_wash_temps', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NuclearCaptureProtocol',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=50)),
                ('start_date', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('update_description', models.TextField()),
                ('publication_summary', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NuclearSequencingRun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=50)),
                ('technician', models.CharField(blank=True, max_length=10)),
                ('date', models.DateField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PowderBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=50)),
                ('date', models.DateField(null=True)),
                ('technician', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('first_author', models.CharField(max_length=50)),
                ('year', models.PositiveSmallIntegerField()),
                ('journal', models.CharField(max_length=100)),
                ('pages', models.CharField(max_length=30)),
                ('author_list', models.TextField()),
                ('url', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RadiocarbonDatingInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('invoice_number', models.CharField(db_index=True, max_length=20, unique=True)),
                ('company_name', models.CharField(max_length=50)),
                ('billing_period', models.CharField(max_length=50)),
                ('billing_date', models.DateField()),
                ('item_description', models.TextField()),
                ('number_of_samples', models.PositiveSmallIntegerField(null=True)),
                ('total_charge', models.DecimalField(decimal_places=2, max_digits=9)),
                ('note', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RadiocarbonShipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('ship_id', models.CharField(db_index=True, max_length=20, unique=True)),
                ('ship_date', models.DateField(null=True)),
                ('analysis_lab', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Return',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('return_date', models.DateField(default=datetime.date.today)),
                ('return_method', models.CharField(max_length=50)),
                ('tracking_number', models.CharField(blank=True, max_length=30)),
                ('courier_delivery_date', models.DateField(null=True)),
                ('return_notes', models.TextField(blank=True)),
                ('collaborator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.Collaborator')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Shipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('text_id', models.CharField(db_index=True, max_length=30, unique=True)),
                ('arrival_date', models.DateField(null=True)),
                ('arrival_method', models.CharField(max_length=255)),
                ('tracking_number', models.CharField(max_length=30)),
                ('arrival_notes', models.TextField()),
                ('shipment_notes', models.TextField()),
                ('documents_location', models.TextField()),
                ('additional_information_location', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShotgunPool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=50)),
                ('technician', models.CharField(blank=True, max_length=10)),
                ('date', models.DateField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShotgunSequencingRun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=50)),
                ('technician', models.CharField(blank=True, max_length=10)),
                ('date', models.DateField(null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('reich_lab_id', models.PositiveIntegerField(db_index=True, help_text=' assigned when a sample is selected from the queue by the wetlab', null=True)),
                ('control', models.CharField(blank=True, help_text='Non-empty value indicates this is a control', max_length=1)),
                ('queue_id', models.PositiveIntegerField(db_index=True, null=True, unique=True)),
                ('individual_id', models.CharField(blank=True, max_length=15)),
                ('skeletal_element', models.CharField(blank=True, help_text='Type of bone sample submitted for aDNA analysis', max_length=50)),
                ('skeletal_code', models.CharField(blank=True, help_text='Sample identification code assigned by the collaborator', max_length=150)),
                ('skeletal_code_renamed', models.TextField(blank=True, help_text='Sample identification code assigned by the Reich Lab')),
                ('sample_date', models.CharField(blank=True, help_text='Age of sample; either a radiocarbon date or a date interval.', max_length=550)),
                ('average_bp_date', models.FloatField(help_text='Average Before Present date, calculated from average of calibrated date range after conversion to BP dates', null=True)),
                ('date_fix_flag', models.CharField(blank=True, help_text='Flag for any issues with the date information submitted by the collaborator', max_length=75)),
                ('group_label', models.CharField(blank=True, help_text='Country_Culture_Period of Individual', max_length=100)),
                ('locality', models.CharField(blank=True, help_text='Location where skeletal remains were found', max_length=150)),
                ('country', models.CharField(blank=True, help_text='Country where skeletal remains were found', max_length=30)),
                ('latitude', models.CharField(blank=True, help_text='Latitude where skeletal remains were found', max_length=20)),
                ('longitude', models.CharField(blank=True, help_text='Longitude where skeletal remains were found', max_length=20)),
                ('notes', models.TextField(blank=True, help_text='Any notes from the collaborator about the individual, sample, site, etc.')),
                ('notes_2', models.TextField(blank=True, help_text='Any notes from the collaborator about the individual, sample, site, etc.')),
                ('collaborators', models.TextField(blank=True, help_text='List of additional collaborators asociated with the sample or reference if sample has been published', max_length=300)),
                ('morphological_sex', models.CharField(blank=True, help_text='Sex as determined by skeletal remains', max_length=20)),
                ('morphological_age', models.CharField(blank=True, help_text='Age as determined by skeletal remains: adult, child, infant, etc.', max_length=25)),
                ('morphological_age_range', models.CharField(blank=True, help_text='Age range in years as determined by skeletal remains', max_length=15)),
                ('loan_expiration_date', models.DateField(help_text='Date by which samples need to be returned to collaborator', null=True)),
                ('dating_status', models.TextField(blank=True, help_text="David Reich's radiocarbon dating status as noted in his anno file")),
                ('collaborator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='samples.Collaborator')),
                ('return_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='samples.Return')),
                ('shipment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='samples.Shipment')),
            ],
            options={
                'unique_together': {('reich_lab_id', 'control')},
            },
        ),
        migrations.CreateModel(
            name='Results',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('library_id', models.CharField(db_index=True, max_length=25)),
                ('extract_control', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='samples.ControlsExtract')),
                ('library_control', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='samples.ControlsLibrary')),
                ('mt_capture_plate', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='samples.MTCapturePlate')),
                ('mt_seq_run', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='samples.MTSequencingRun')),
                ('nuclear_capture_plate', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='samples.NuclearCapturePlate')),
                ('nuclear_seq_run', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='samples.NuclearSequencingRun')),
                ('shotgun_pool', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='samples.ShotgunPool')),
                ('shotgun_seq_run', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='samples.ShotgunSequencingRun')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RadiocarbonDatedSample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('material', models.CharField(blank=True, max_length=50)),
                ('fraction_modern', models.FloatField(null=True)),
                ('fraction_modern_plus_minus', models.FloatField(null=True)),
                ('d14c_per_mille', models.FloatField(null=True)),
                ('d14c_per_mille_plus_minus', models.FloatField(null=True)),
                ('age_14c_bp', models.FloatField(null=True)),
                ('age_14c_bp_plus_minus', models.FloatField(null=True)),
                ('delta13c_per_mille', models.FloatField(null=True)),
                ('delta15n_per_mille', models.FloatField(null=True)),
                ('percent_carbon', models.FloatField(null=True)),
                ('percent_nitrogen', models.FloatField(null=True)),
                ('carbon_to_nitrogen_ratio', models.FloatField(null=True)),
                ('run_date', models.DateField(null=True)),
                ('lab_code', models.CharField(blank=True, max_length=50)),
                ('payment_lab', models.CharField(blank=True, max_length=50)),
                ('invoice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='samples.RadiocarbonDatingInvoice')),
                ('radiocarbon_shipment', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='samples.RadiocarbonShipment')),
                ('sample', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.Sample')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PowderSample',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('powder_sample_id', models.CharField(db_index=True, max_length=15, unique=True)),
                ('sampling_tech', models.CharField(help_text='Technique used to produce the bone powder', max_length=15)),
                ('sampling_notes', models.TextField(blank=True, help_text='Notes from technician about sample quality, method used, mg of bone powder produced and storage location')),
                ('total_powder_produced_mg', models.FloatField(help_text='Total miligrams of bone powder produced from the sample', null=True)),
                ('storage_location', models.CharField(help_text='Storage location of remaining bone powder', max_length=50)),
                ('powder_batch', models.ForeignKey(help_text='powder belongs to this processing batch', null=True, on_delete=django.db.models.deletion.PROTECT, to='samples.PowderBatch')),
                ('sample', models.ForeignKey(help_text='Powder was produced from this sample', on_delete=django.db.models.deletion.PROTECT, to='samples.Sample')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='nuclearcaptureplate',
            name='protocol',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='samples.NuclearCaptureProtocol'),
        ),
        migrations.AddField(
            model_name='mtcaptureplate',
            name='protocol',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='samples.MTCaptureProtocol'),
        ),
        migrations.CreateModel(
            name='Lysate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('lysate_id', models.CharField(db_index=True, max_length=15, unique=True)),
                ('powder_used_mg', models.FloatField(help_text='milligrams of bone powder used in lysis', null=True)),
                ('total_volume_produced', models.FloatField(help_text='Total microliters of lysate produced', null=True)),
                ('plate_id', models.CharField(blank=True, max_length=12)),
                ('position', models.CharField(blank=True, help_text='Position on plate', max_length=3)),
                ('barcode', models.CharField(blank=True, help_text='Physical barcode on tube', max_length=12)),
                ('notes', models.TextField(blank=True)),
                ('powder_sample', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='samples.PowderSample')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LibraryBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=50)),
                ('technician', models.CharField(blank=True, max_length=50)),
                ('prep_date', models.DateField(null=True)),
                ('prep_note', models.TextField(blank=True)),
                ('prep_robot', models.CharField(max_length=20)),
                ('protocol', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='samples.LibraryProtocol')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Instance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('instance_id', models.CharField(db_index=True, max_length=40)),
                ('master_id', models.CharField(db_index=True, max_length=40)),
                ('reich_lab_id', models.PositiveIntegerField(db_index=True, help_text='Lowest Reich Lab sample ID for this individual', null=True)),
                ('published_year', models.PositiveSmallIntegerField(null=True)),
                ('publication', models.CharField(blank=True, max_length=50)),
                ('group_id', models.CharField(max_length=120)),
                ('data_type', models.CharField(max_length=20)),
                ('family', models.TextField(blank=True, help_text='family id and position within family')),
                ('assessment', models.TextField(help_text='Xcontam listed if |Z|>2 standard errors from zero: 0.02-0.05="QUESTIONABLE", >0.05="QUESTIONABLE_CRITICAL" or "FAIL") (mtcontam 97.5th percentile estimates listed if coverage >2: <0.8 is "QUESTIONABLE_CRITICAL", 0.8-0.95 is "QUESTIONABLE", and 0.95-0.98 is recorded but "PASS", gets overriden by ANGSD')),
                ('library_ids', models.ManyToManyField(to='samples.Library')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExtractBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('batch_name', models.CharField(max_length=50)),
                ('technician', models.CharField(blank=True, max_length=50)),
                ('date', models.DateField(null=True)),
                ('robot', models.CharField(blank=True, max_length=20)),
                ('note', models.TextField(blank=True)),
                ('protocol', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='samples.ExtractionProtocol')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Extract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('extract_id', models.CharField(db_index=True, max_length=20, unique=True)),
                ('lysis_volume_extracted', models.FloatField(null=True)),
                ('notes', models.TextField(blank=True)),
                ('storage_location', models.TextField(blank=True)),
                ('extract_batch_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='samples.ExtractBatch')),
                ('lysate_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='samples.Lysate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DistributionsShipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('date', models.DateField(help_text='Distribution shipment date')),
                ('shipment_method', models.CharField(help_text='Shipment method used to send samples: FedEx, USPS, hand carried', max_length=20)),
                ('shipment_tracking_number', models.CharField(help_text='Courier package tracking number', max_length=30)),
                ('shipment_notes', models.TextField(blank=True, help_text='Any notes associated with the distribution shipment')),
                ('delivery_date', models.DateField(help_text='Date distribution shipment was delivered', null=True)),
                ('delivery_notes', models.TextField(blank=True, help_text='Any notes assoicated with the distribution delivery: person confirming delivery, etc.')),
                ('collaborator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.Collaborator')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DistributionsPowder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('powder_sent_mg', models.FloatField(help_text='Total miligrams of bone powder distributed')),
                ('distribution_shipment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.DistributionsShipment')),
                ('powder_sample', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.PowderSample')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DistributionsLysate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('lysate_sent_ul', models.FloatField(help_text='Total microliters of lysate distributed')),
                ('distribution_shipment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.DistributionsShipment')),
                ('lysate', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.Lysate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DistributionsExtract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.CharField(max_length=20)),
                ('modification_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified_by', models.CharField(max_length=20)),
                ('extract_sent_ul', models.FloatField(help_text='Total microliters of extract distributed')),
                ('distribution_shipment', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.DistributionsShipment')),
                ('extract', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.Extract')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='controlslibrary',
            name='library_batch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.LibraryBatch'),
        ),
        migrations.AddField(
            model_name='controlslibrary',
            name='nuclear_sequencing_run',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='samples.NuclearSequencingRun'),
        ),
        migrations.AddField(
            model_name='controlsextract',
            name='extract_batch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='samples.ExtractBatch'),
        ),
        migrations.AddField(
            model_name='controlsextract',
            name='nuclear_sequencing_run',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='samples.NuclearSequencingRun'),
        ),
    ]
