# Generated by Django 3.0.4 on 2021-11-05 18:55

from django.db import migrations

def copy_protocols(protocol_queryset, apps):
	CaptureProtocol = apps.get_model('samples', 'CaptureProtocol')
	for to_copy in protocol_queryset:
		x, created = CaptureProtocol.objects.get_or_create(name = to_copy.name)
		if created:
			x.start_date = to_copy.start_date
			x.end_date = to_copy.end_date
			x.description = to_copy.description
			x.manuscript_summary = to_copy.manuscript_summary
			x.protocol_reference = to_copy.protocol_reference
			
			x.creation_timestamp = to_copy.creation_timestamp
			x.created_by = to_copy.created_by
			x.modification_timestamp = to_copy.modification_timestamp
			x.modified_by = to_copy.modified_by
			x.save()

def merge_protocols(apps, schema_editor):
	MTCaptureProtocol = apps.get_model('samples', 'MTCaptureProtocol')
	NuclearCaptureProtocol = apps.get_model('samples', 'NuclearCaptureProtocol')
	
	copy_protocols(MTCaptureProtocol.objects.all(), apps)
	copy_protocols(NuclearCaptureProtocol.objects.all(), apps)
	
def do_nothing(apps, schema_editor):
	pass

class Migration(migrations.Migration):

    dependencies = [
        ('samples', '0096_captureprotocol'),
    ]

    operations = [
		migrations.RunPython(merge_protocols, do_nothing),
    ]
