# Generated by Django 3.0.4 on 2022-08-02 14:19

from django.db import migrations

def find_originating_element(layout_elements):
	for candidate in layout_elements:
		if 'failed' in candidate.lysate_batch.batch_name \
			or 'Crowd' in candidate.lysate_batch.batch_name \
			or 'NE' in candidate.lysate_batch.batch_name \
			or 'Mixed' in candidate.lysate_batch.batch_name:
			pass
		else:
			return candidate
	return None

# 
def fix_lysatebatchlayout_lysate(apps, lysate_batch):
	LysateBatchLayout = apps.get_model('samples', 'LysateBatchLayout')
	Lysate = apps.get_model('samples', 'Lysate')
	
	for lysate in Lysate.objects.all():
		layout_elements = LysateBatchLayout.objects.filter(lysate=lysate).order_by('lysate_batch__date')
		if len(layout_elements) > 1:
			originating_element = find_originating_element(layout_elements)
			for element in layout_elements:
				if element != originating_element:
					element.lysate = None
					element.save()
			lysate.lysate_batch = originating_element.lysate_batch
			lysate.save()

class Migration(migrations.Migration):

	dependencies = [
		('samples', '0168_remove_fake_powders'),
	]

	operations = [
		migrations.RunPython(fix_lysatebatchlayout_lysate),
	]
