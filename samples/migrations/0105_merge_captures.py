# Generated by Django 3.0.4 on 2021-11-11 19:42

from django.db import migrations

def copy_queryset_to_nuclear_capture(apps, queryset):
	NuclearCapturePlate = apps.get_model('samples', 'NuclearCapturePlate')
	for x in queryset:
		plate, created = NuclearCapturePlate.objects.get_or_create(name=x.name, protocol_temp=x.protocol_temp)
		if created:
			plate.technician = x.technician
			plate.technician_fk = x.technician_fk
			plate.date = x.date
			if hasattr(x, 'robot'):
				plate.robot = x.robot
			plate.notes = x.notes
			plate.save()

def copy_mt_to_nuclear(apps, schema_editor):
	MTCapturePlate = apps.get_model('samples', 'MTCapturePlate')
	copy_queryset_to_nuclear_capture(apps, MTCapturePlate.objects.all())
			
def copy_shotgun_to_nuclear(apps, schema_editor):
	ShotgunPool = apps.get_model('samples', 'ShotgunPool')
	copy_queryset_to_nuclear_capture(apps, ShotgunPool.objects.all())
	
def do_nothing(apps, schema_editor):
	pass

class Migration(migrations.Migration):

    dependencies = [
        ('samples', '0104_assign_shotgun_protocol'),
    ]

    operations = [
		migrations.RunPython(copy_mt_to_nuclear, do_nothing),
		migrations.RunPython(copy_shotgun_to_nuclear, do_nothing),
    ]
